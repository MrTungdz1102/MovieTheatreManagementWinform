<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgAcc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iIiIiIjmzP8AW5yszMzMzM+M98GzMzMzMzMRERERERHDuPgiIiIiImZmZmZmzjDfDMzMzM8eeuPeMiIi
        IiIs9chERERERMzMzMzzbMzMzMzxZy776ee+X5fn8Dennvl386ee+X5fn8DeJmZmZmbPfKzMzMzM8We+
        uRERERFnMREREREzMzMzM8m+pmZmZmZ4s5N9cZERERER+8m+oiIiIiImZmZmfGeuXZmZmZmYiIiIjxnr
        l+URERERHFnLv5xMzMzMzZy7+TMzMzM8Xx/eXffTz+BnLvTz+DnHvVzrOzs7Ozs7Ozs7O8js7Ozs7Ozs
        7Ozs7ERERERHKREREREcmeuqzMzMzM+Pjw7pMzMzMzMxERERERFnvh2IiIiIiI5M98O798jMzMzMzNnv
        h/ZmZmZmZmIiIiIiIsz74dz7iIiIiIiJmZmZmZmz3w77mZmZmZmeT48Py6/x4fl184d62WeuHfXWzj3q
        ZZx708szl3LegNmc+5BwEREeczo7nkiIiZmZ8ZnT3LZmZn/WZ1dz/RERZnX3PBETPjPfZ3Pvwz5zPvt7
        nk7xE2d3Zi+Pd+X5HjO7vje/lnf2/9k=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>